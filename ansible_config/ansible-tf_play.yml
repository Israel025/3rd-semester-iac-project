---
- name: Setup Remote Server with k8s cluster and applications deployed 
  hosts: k8s-server
  become: true
  #remote_user: ubuntu
  vars_files:
    - ./vars/vars1.yml

  tasks:
  - name: set timezone to Africa/lagos
    timezone:
      name: Africa/Lagos
  
  - name: Update and upgrade apt packages
    ansible.builtin.apt:
      update_cache: yes
      autoclean: yes
      autoremove: yes
      upgrade: yes
  
  - name: Install python3
    ansible.builtin.apt:
      name: python3
      state: present
  
  - name: Install pip3
    ansible.builtin.apt:
      name: python3-pip
      state: present

  - name: Installing Docker
    ansible.builtin.command: "{{ item }}"
    with_items:
      - sudo apt remove docker docker-engine docker.io containerd runc
      - sudo apt update    
      - sudo apt install apt-transport-https ca-certificates curl lsb-release gnupg-agent software-properties-common -y
      - sudo mkdir -m 0755 -p /etc/apt/keyrings
      - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg -y
      - echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      - sudo apt update
      - sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
      - sudo usermod -aG docker $USER
      - newgrp docker
    
  - name: Installing Kubectl
    ansible.builtin.command: "{{ item }}"
    with_items:
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/arm64/kubectl"
      - sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl -y
      - sudo apt update
  
  - name: Installing Minikube
    ansible.builtin.command: "{{ item }}"
    with_items:
      - curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-arm64
      - sudo install minikube-linux-arm64 /usr/local/bin/minikube -y
      - sudo apt update

  - name: Run the equivalent of "apt-get clean" as a separate step
    apt:
      clean: yes

  - name: Start k8s cluster on the VM's Baremetal
    ansible.builtin.command: minikube start --driver=none --apiserver-ips={{ server-pub-ip }} --apiserver-name={{ server-pub-ip }} --insecure-registry='192.168.0.0/16'
  
  - name: Enable ingress addon
    ansible.builtin.command: minikube addons enable ingress
  
  - name: Apply/install the certificate manager in the cluster
    ansible.builtin.command: kubectl apply --validate=false -f ../cert-manager/

  - name: Creating namespaces for the applications
    ansible.builtin.command: kubectl apply -f ../k8s-namespaces/
  
  - name: Deploying the Sharkapp and it's services
    ansible.builtin.command: kubectl apply -f ../sharkapp-k8s/
    
  - name: Deploying the Sock-shop app and it's services
    ansible.builtin.command: kubectl apply -f ../sock-shop_app/deploy/kubernetes/manifests

  - name: Deploying Prometheus and Grafana for the Sock-shop app and it's services
    ansible.builtin.command: kubectl create -f ../sock-shop_app/deploy/kubernetes/manifests-monitoring/ 
  
  - name: Create Let's Encrypt Issuer for our cluster; create a ClusterIssuer that allows us to issue certs in any namespace
    ansible.builtin.command: kubectl apply -f ../cert-issuer-nginx-ingress.yaml

  - name: Create the ingress resources for all deployments
    ansible.builtin.command: kubectl apply -f ../all-apps-ingress/
